{"version":3,"sources":["components/Start.js","components/Question.js","components/End.js","components/Modal.js","myComponents/question.jsx","App.js","reportWebVitals.js","index.js"],"names":["Start","onQuizStart","className","onClick","style","backgroundColor","QuestionHis","data","onAnswerUpdate","numberOfQuestions","activeQuestion","onSetActiveQuestion","onSetStep","changeVisible","useState","selected","setSelected","error","setError","radiosWrapper","useRef","backButtonVisible","setbackButtonVisible","useEffect","findCheckedInput","current","querySelectorAll","forEach","el","checked","changeHandler","e","prevState","target","value","class","color","fontWeight","marginBottom","marginTop","marginRight","to","textAlign","question","fontSize","marginLeft","ref","choices","map","choice","i","type","name","onChange","length","q","a","console","log","alert","End","results","onReset","onAnswersCheck","time","result","index","answer","correct","Modal","onClose","textDecoration","Question","state","setState","visible","setvisible","adultVisibility","setAdultVisibility","juniorVisibility","setjuniorVisibility","step","setStep","setActiveQuestion","answers","setAnswers","showModal","setShowModal","setTime","quizStartHandler","setInterval","prevTime","resetClickHandler","setDualVisibility","options","label","placeholder","quizData","juniorQData","App","visibility","setVisibility","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d75c14f8.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Start = ({ onQuizStart }) => {\r\n  return(\r\n\r\n    <div className=\"start\">\r\n    <div className=\"card\">\r\n      <div className=\"card-content\">\r\n        <div className=\"content\">\r\n          <h1>Start Choosing</h1>\r\n          <p>Hope You Like it vDoit 😊</p>\r\n          <p>Thank you for the opportunity ✔️</p>\r\n         <div className=\"start\">\r\n         <button className=\"button is-primary is-medium\" onClick={onQuizStart} style={{backgroundColor:\"red\"}}>Start</button>\r\n         </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Start;","import React, { useState, useEffect, useRef } from 'react';\r\n\r\n\r\nimport { Route,Switch} from \"react-router-dom\";\r\nimport { BrowserRouter as Router} from \"react-router-dom\";\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst QuestionHis = ({ data, onAnswerUpdate, numberOfQuestions, activeQuestion, onSetActiveQuestion, onSetStep,changeVisible }) => {\r\n  const [selected, setSelected] = useState([]);\r\n  const [error, setError] = useState('');\r\n  const radiosWrapper = useRef();\r\n  const [backButtonVisible, setbackButtonVisible]=useState(false);\r\n\r\n  useEffect(() => {\r\n    const findCheckedInput = radiosWrapper.current.querySelectorAll('input:checked').forEach( el => el.checked = false );\r\n    if(findCheckedInput) {\r\n      findCheckedInput.checked = false;\r\n    }\r\n  }, [data]);\r\n\r\n  const changeHandler = (e) => {\r\n    \r\n    setSelected(prevState =>[...prevState, e.target.value]);\r\n    if(error) {\r\n      setError('');\r\n    }\r\n  }\r\n  \r\n  const nextClickHandler = (e) => {\r\n    if(selected === '') {\r\n      return setError('Please select one option!');\r\n    }\r\n    const seleLength = radiosWrapper.current.querySelectorAll('input:checked');\r\n    if(seleLength.length==0) {\r\n      alert(\"Please select atleast one option\");\r\n      return;\r\n    }\r\n    onAnswerUpdate(prevState => [...prevState, { q: data.question, a: selected }]);\r\n    console.log(selected);\r\n    setSelected([]);\r\n    if(activeQuestion < numberOfQuestions - 1) {\r\n      onSetActiveQuestion(activeQuestion + 1);\r\n    }else {\r\n      onSetStep(3);\r\n    }\r\n\r\n    if(activeQuestion+1>0) {\r\n      setbackButtonVisible(true);\r\n    } else {\r\n      setbackButtonVisible(false);\r\n    }\r\n  }\r\n\r\n  const prevHandler = () => {\r\n    \r\n    if(activeQuestion-1>0) {\r\n      setbackButtonVisible(true);\r\n    } else {\r\n      setbackButtonVisible(false);\r\n    }\r\n    onSetActiveQuestion(activeQuestion - 1);\r\n  }\r\n\r\n  return(\r\n    <div className=\"card\">\r\n      <Router>\r\n         <div class=\"card-header\" >\r\n                <p class=\"card-header-title\" style={{color:\"#6e6e6e\",fontWeight:\"bolder\",marginBottom:\"3%\"}}> \r\n                  2/10\r\n                </p>\r\n                  <span class=\"icon\" style={{color:\"#6e6e6e\",fontWeight:\"bolder\",marginTop:\"1%\",marginRight:\"2%\"}} onClick={changeVisible}>\r\n                  <Link to={\"/questionOne\"}><i class=\"fa fa-times\"></i></Link>\r\n                  </span>\r\n           </div>\r\n      <div className=\"card-content\">\r\n        <div className=\"content\">\r\n          <h2 className=\"mb-5\" style={{textAlign:\"center\",fontWeight:\"bolder\",color:\"#6e6e6e\",marginTop:\"5%\"}}>{data.question}</h2>\r\n          <p style={{textAlign:\"center\",color:\"#ccbebe\",fontSize:\"18px\",marginTop:\"-1%\",fontWeight:\"bolder\"}}>\r\n                          make selection based on options below</p>\r\n        <div className=\"checkit\" style={{marginLeft:\"10%\",textAlign:\"center\",color:\"#6e6e6e\",fontSize:\"15px\",fontWeight:\"bolder\"}}>\r\n          <div className=\"control\" ref={radiosWrapper}>\r\n            {data.choices.map((choice, i) => (\r\n              <label className=\"radio\" key={i}>\r\n                <input type=\"checkbox\" className=\"custombox\" name=\"answer\" value={choice} onChange={changeHandler} />\r\n                <span>  {choice} </span>\r\n              </label>\r\n            ))}\r\n          </div>\r\n          </div>\r\n          <div className=\"butttons\" style={{marginLeft:\"45%\",marginTop:\"7%\"}}>\r\n          {error && <div className=\"has-text-danger\">{error}</div>}\r\n          {backButtonVisible&&<button className=\"btn btn-outline-warning btn-sm\" onClick={prevHandler}>Back</button>}\r\n          <button className=\"btn btn-warning next\" onClick={nextClickHandler}>Next</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QuestionHis;","import React, { useEffect, useState } from 'react';\r\n\r\nimport { formatTime } from '../utils';\r\n\r\nconst End = ({ results, data, onReset, onAnswersCheck, time }) => {\r\n  const [correctAnswers, setCorrectAnswers] = useState(0);\r\n\r\n  useEffect(() => {\r\n    let correct = 0;\r\n    results.forEach((result, index) => {\r\n      if(result.a === data[index].answer) {\r\n        correct++;\r\n      }\r\n    });\r\n    // setCorrectAnswers(correct);\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return(\r\n    <div className=\"card\">\r\n      <div className=\"card-content\">\r\n        <div className=\"content\">\r\n          <h3>Your results</h3>\r\n          <button className=\"button is-success mr-2\" onClick={onAnswersCheck}>Check your Submission</button>\r\n          <button className=\"button is-info\" onClick={onReset}>Submit again</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default End;","import React from 'react';\r\n\r\nconst Modal = ({ onClose, results, data }) => {\r\n  return(\r\n    <div className=\"modal is-active\">\r\n      <div className=\"modal-background\" onClick={onClose}></div>\r\n      <div className=\"modal-card\">\r\n        <header className=\"modal-card-head\">\r\n          <p className=\"modal-card-title\">You Choosed</p>\r\n          <button className=\"delete\" onClick={onClose}></button>\r\n        </header>\r\n        <section className=\"modal-card-body content\">\r\n          <ul style={{textDecoration:\"none\"}}>\r\n            {results.map((result, i) => (\r\n              <li key={i} className=\"mb-6\">\r\n                <p><strong>{result.q}</strong></p>\r\n                <p className={result.a === data[i].answer ? 'has-background-success has-text-white p-2' : 'has-background-success has-text-white p-2'}>You Choosed: {result.a+\" \"}</p>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </section>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Modal;","import React, { useState } from 'react';\r\nimport Select from \"react-select\";\r\n\r\nimport Start from '../components/Start';\r\nimport QuestionHis from '../components/Question';\r\nimport End from '../components/End';\r\nimport Modal from '../components/Modal';\r\nimport quizData from \"./data/adultQ.json\";\r\nimport juniorQData from \"./data/juniorQ.json\";\r\n\r\n\r\n\r\nlet interval;\r\n\r\nfunction Question(onChange) {\r\n\r\n    const [state,setState] = useState(\"\");\r\n    const [visible,setvisible]=useState(true);\r\n    const [adultVisibility,setAdultVisibility]=useState(false);\r\n    const [juniorVisibility,setjuniorVisibility]=useState(false);\r\n    const [step, setStep] = useState(2);\r\n    const [activeQuestion, setActiveQuestion] = useState(0);\r\n    const [answers, setAnswers] = useState([]);\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [time, setTime] = useState(0);\r\n    \r\n    const prevClickHandler = () => {\r\n        \r\n    }\r\n\r\n    const quizStartHandler = () => {\r\n        setStep(2);\r\n        interval = setInterval(() => {\r\n          setTime(prevTime => prevTime + 1);\r\n        }, 1000);\r\n      }\r\n    \r\n      const resetClickHandler = () => {\r\n        setActiveQuestion(0);\r\n        setAnswers([]);\r\n        setStep(2);\r\n        setTime(0);\r\n        interval = setInterval(() => {\r\n          setTime(prevTime => prevTime + 1);\r\n        }, 1000);\r\n      }\r\n\r\n    const optionsSize = [\r\n\r\n        {value:'adult' ,label: '🧑‍🤝‍🧑 Adult'},\r\n        {value:'junior', label: '🤼 Junior'},\r\n        \r\n    ];\r\n\r\n    const nextClickHandler= () => {\r\n        if(state===\"adult\") {\r\n            setvisible(false);\r\n            console.log(\"adult is selected\")\r\n            setAdultVisibility(true);\r\n            \r\n        } else if(state===\"junior\") {\r\n            setvisible(false);\r\n            console.log(\"junior is selected\");\r\n            setjuniorVisibility(true);\r\n        }\r\n        else {\r\n            alert(\"Please select an option\");    \r\n        }\r\n    }\r\n\r\n    const setDualVisibility= () => {\r\n      setAdultVisibility(false);\r\n      setjuniorVisibility(false);\r\n      setvisible(true);\r\n    }\r\n\r\n\r\n    return (\r\n         <div className=\"selection\">\r\n        {visible && <div className=\"card\">\r\n              <header class=\"card-header\">\r\n                <p class=\"card-header-title\" style={{fontSize:\"18px\",color:\"#6e6e6e\",fontWeight:\"bolder\"}}> \r\n                  1/10\r\n                </p>\r\n                  <span class=\"icon\" style={{color:\"#6e6e6e\",fontWeight:\"bolder\",marginTop:\"1%\",marginRight:\"2%\"}}>\r\n                  <i class=\"fa fa-times\"></i>\r\n                  </span>\r\n                  </header>\r\n          <div className=\"card-content\">\r\n            <div className=\"content\">\r\n              <h2 className=\"mb-5 question\">{}</h2>\r\n              <div className=\"selectit\">\r\n              <h3 style={{textAlign:\"center\",fontWeight:\"bolder\",color:\"#504242\",fontSize:\"25px\"}}>\r\n                          what type of age bracket is needed?\r\n                        </h3>\r\n                        <p style={{textAlign:\"center\",color:\"#6e6e6e\",fontSize:\"20px\",fontWeight:\"bolder\",marginTop:\"-1%\"}}>\r\n                          make selection based on desired age group</p>\r\n              </div>\r\n              <div className=\"control\" >\r\n                  <div className=\"selectit\">\r\n                    <Select  \r\n                        onChange={onChange= (value) =>{\r\n                              console.log(value);\r\n                              setState(value.value);                          \r\n                              }} \r\n                                options={optionsSize} \r\n                                placeholder={<div style={{color:\"#6e6e6e\",fontSize:\"18px\",fontWeight:\"bolder\"}}>\r\n                                  🍰 &nbsp;Age Bracket</div>}\r\n                                /> \r\n                  </div>          \r\n              </div>  \r\n              <div className=\"btnss\"  style={{marginTop:\"10%\"}}> \r\n                            &nbsp;\r\n                          <button onClick={prevClickHandler}  className=\"btn btn-outline-warning btn-sm\">Back</button> \r\n                            \r\n                          <button  onClick={nextClickHandler} className=\"btn btn-warning next\">Next</button>     \r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>}\r\n        <div>\r\n        {adultVisibility && <div className=\"App\">\r\n      {step === 1 && <Start onQuizStart={quizStartHandler} />}\r\n      {step === 2 && <QuestionHis \r\n        data={quizData.data[activeQuestion]}\r\n        onAnswerUpdate={setAnswers}\r\n        numberOfQuestions={quizData.data.length}\r\n        activeQuestion={activeQuestion}\r\n        onSetActiveQuestion={setActiveQuestion}\r\n        onSetStep={setStep}\r\n        changeVisible={setDualVisibility}\r\n      />}\r\n      {step === 3 && <End \r\n        results={answers}\r\n        data={quizData.data}\r\n        onReset={resetClickHandler}\r\n        onAnswersCheck={() => setShowModal(true)}\r\n        time={time}\r\n      />}\r\n\r\n      {showModal && <Modal \r\n        onClose={() => setShowModal(false)}\r\n        results={answers}\r\n        data={quizData.data}\r\n      />}\r\n    </div>}\r\n        </div>\r\n\r\n        <div>\r\n        {juniorVisibility && <div className=\"App\">\r\n      {step === 1 && <Start onQuizStart={quizStartHandler} />}\r\n      {step === 2 && <QuestionHis \r\n        data={juniorQData.data[activeQuestion]}\r\n        onAnswerUpdate={setAnswers}\r\n        numberOfQuestions={juniorQData.data.length}\r\n        activeQuestion={activeQuestion}\r\n        onSetActiveQuestion={setActiveQuestion}\r\n        onSetStep={setStep}\r\n        changeVisible={setDualVisibility}\r\n      />}\r\n      {step === 3 && <End \r\n        results={answers}\r\n        data={juniorQData.data}\r\n        onReset={resetClickHandler}\r\n        onAnswersCheck={() => setShowModal(true)}\r\n        time={time}\r\n      />}\r\n\r\n      {showModal && <Modal \r\n        onClose={() => setShowModal(false)}\r\n        results={answers}\r\n        data={juniorQData.data}\r\n      />}\r\n    </div>}\r\n        </div>\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Question;\r\n","import React, { useState } from 'react';\r\nimport './App.css';\r\n\r\nimport { Route,Switch} from \"react-router-dom\";\r\nimport { BrowserRouter as Router} from \"react-router-dom\";\r\nimport  Question  from \"./myComponents/question\";\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst App = () => {\r\n  const [visibility, setVisibility] = useState(true);\r\n  const quizStartHandler = () => {\r\n    setVisibility(false);\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n    <Router>\r\n          <Switch>\r\n            <Route exact path=\"/questionOne\" component={Question} />  \r\n          </Switch>\r\n         \r\n    {visibility && <div className=\"App\">\r\n      <div className=\"card\">\r\n      <div className=\"card-content\">\r\n        <div className=\"content\">\r\n          <h1>Start Choosing</h1>\r\n          <p>Hope You Like it vDoit 😊</p>\r\n          <p>Thank you for the opportunity ✔️</p>\r\n          <button className=\"button is-info is-medium\" onClick={quizStartHandler}><Link to={\"/questionOne\"}>Start</Link></button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    </div>}\r\n    </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bulma/css/bulma.min.css';\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}